% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wfo_grow_forest.R
\name{wfo_grow_forest}
\alias{wfo_grow_forest}
\title{Performs walk-forward optimization using the random forest algorithm}
\usage{
wfo_grow_forest(featuremat, modelwindow = 252, wfo_span = "months",
  ylag = 21, SPwindow = 63, jobname = NA, verbose = FALSE, mtry = 2,
  ntree = 1000, importance = TRUE, earliest = NA, na.action = na.omit,
  ...)
}
\arguments{
\item{featuremat}{The xts matrix previously generated using function `make_featuremat`.
It should contain the target y in column 1, and all the predictors
(features) in the other columns. It is a daily xts matrix.}

\item{modelwindow}{Size in days for the rolling window use to build each model.
Each model is built at the dates specified by wfo_span and uses
a data training window of this size which includes the wfo_span date.}

\item{wfo_span}{Specifies the points in time when new models are optimized for
walk-forward optimization. The points in time can either be
given as a vector of date strings, or it can be automatically
generated using the endpoints function.  To use the endpoints
function, wfo_span must be a string of length one comprising
one of the following values: 'days', 'weeks', 'months' and 'quarters'.
This value is then passed on as argument "on" to function endpoints.
If 'days' is specified, then function endpoints is not used
since the data already has daily granularity. Default is "months".}

\item{ylag}{Set to number of days that y looks ahead in the feature matrix.
In order to avoid lookahead bias, the data set used to train the
model must use data that is earlier than this the model date minus
ylag.  Always set ylag to the number of lookahead days.  Default
is 21.}

\item{SPwindow}{The rolling window size in days used to calculate the SP_score. See
below for details on the SPscore.}

\item{jobname}{If specified, then the results are stored in a list with a single
item in it, with the jobname as its name. This is normally used
when multiple parallel calls are made to wfo_grow_forest as it
provides a simple method to combine all results.  See Value
section below for details.}

\item{mtry}{Parameter mtry passed on to randomForest function.  This is the
number of features randomly selected for each tree.  Defautl is 2.}

\item{ntree}{Parameter ntree passed on to randomForest function.  This is the
number of trees generated for each model.  Default is 1000.}

\item{importance}{Parameter importance passed on to randomForest function. This is a
logical specifying whether to output the variable importance.
Default is TRUE.}

\item{earliest}{The earliest possible wfo date desired.  This is useful if
the featuremat goes much further back in time than needed.}

\item{na.action}{Parameter passed on to randomForest to determine what to do with
NAs.  Default is na.omit.}

\item{...}{Additional parameters passed on to randomForest function.}

\item{PQwindow}{The rolling window size in days used to calculate the PQ_score.
See below for details on how the PQ_score is calculated.}
}
\value{
If jobname is specified, then the function wraps all list items below into
        a single element list, where the elemenat is named by argument jobname.
        Otherwise, it skips the wrapping and simple returns a list with the following items:

\describe{
  \item{\preformatted{$pred}}{
     A daily xts matrix containing the prediction information. The index represent the prediction
     date. The matrix has the following columns:
     \itemize{
        \item
        \strong{y        } The target value against which each model are being trained, as
                           specified by column y in argument `featuremat`. For example,
                           this could be a future return for a certain period, properly lagged
                           in time.
        \item
        \strong{yhat    } The value predicted by the model trained using the most recent
                           date up to but not including the current period.
        \item
        \strong{samesign } This is a logical series comparing the signs between y and yhat
                           to see if they are the same. It is useful to convert the
                           random forest regression values (yhat) to a classification model.

        \item
        \strong{SP_score } The Stability of Prediction score expressed as the number of daily
                           prediction sign changes over a rolling window of size `SPwindow`.  A
                           stable prediction should have a small SPscore such as < 2 or 3 for a
                           reasonably sized window. An unstable model will tend to oscillate and
                           should be viewed as indecisive.
        \item
        \strong{PQ_score}  The Prediction Quality score expressed as the number of daily prediction
                           that were of the same sign over a rolling window of size `PQwindow`.
                           The PQ_score is expressed as the ratio of accurate predictions over
                           the total number of predictions (PQwindow).  Therefore if all predictions
                           were correct over a given PQwindow, then PQ_score = 1.  A PQ_score
                           that is meaningfully below 1 should be viewed as bad because it means
                           the most recent models don't predict very well.


        }

     }

   \item{\preformatted{$wfo_points}}{
     \strong{A vector of time indices} containing the wfo optimization dates.  In other words,
     these are the dates at which a new model was optimized.
     }


}
}
\description{
Builds a random forest model at each optimization point in time for
a given set of parameters.  This function is single-threaded and builds
a single model at each point in time.  Use function wfo_grow_jungle to
take advantage of multiple CPU cores.
}
\details{
In order to ensure no date is
                   skipped, both start date and end date must align on a wfo_span
                   date.  In addition, the start date for a subsequent job should be
                   identical to the end date of the previous job.  This would correspond
                   to a prediction date in the previous job at <end date>, whereas it
                   would correspond to a model training date for the subsequent job
                   at <start date>.  The default is NA which means no subsetting is
                   performed.
}
